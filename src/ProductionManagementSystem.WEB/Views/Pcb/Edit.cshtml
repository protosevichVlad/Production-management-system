@model ProductionManagementSystem.WEB.Models.PcbCreateEditViewModel

@{
  var isEdit = Model.Id != 0;
  ViewBag.Title = isEdit ? "Изменение" : "Создание" + " PCB";
  Layout = "_AltiumDBLayout";
}

<div id="editProject">
<div class="bx--grid">
<div class="bx--row bx--row-padding">
  <div class="bx--col-sm-3">
    <h1>@ViewBag.Title</h1>
  </div>
  <div class="bx--col-sm-1" style="display: flex; justify-content: end">
    <button class="bx--btn bx--btn--primary" v-on:click="updateProject">Сохранить</button>
  </div>
</div>
@if (!isEdit)
{
  <div class="bx--row">
    <p>Если у вас есть файл спецификации, вы можете импортировать все данные из файла спецификации с помощью <a asp-action="Import">формы</a></p>
  </div>
}
<div class="bx--row bx--row-padding">
  <div class="bx--col-md-5">
    <div class="bx--grid">
      <div class="bx--row">
        <div class="bx--col-sm-3">
          <div class="bx--form-item bx--text-input-wrapper">
            <label for="text-input-name" class="bx--label">Наименование</label>
            <div class="bx--text-input__field-wrapper">
              <svg v-if="!validator.projectName.isValid" focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--text-input__invalid-icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.1,7-7S11.9,1,8,1z M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2 c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z"></path><path d="M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8 c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z" data-icon-path="inner-path" opacity="0"></path></svg>
              <input id="text-input-name" type="text" :class="{ 'bx--text-input': true, 'bx--text-input--invalid': !validator.projectName.isValid }" placeholder="Item" v-model="project.name">
            </div>
            <div v-if="!validator.projectName.isValid" class="bx--form-requirement">
              {{validator.projectName.validationMessage}}
            </div>
          </div>
        </div>
        <div class="bx--col-sm-1">
          <label for="text-input-variant" class="bx--label">Версия</label>
          <input id="text-input-variant" type="text" class="bx--text-input" placeholder="Item" v-model="project.variant">
        </div>
      </div>
      <div class="bx--row">
        <div class="bx--col-sm--auto">
          <label for="text-area-Description" class="bx--label">Описание</label>
          <textarea id="text-area-Description" class="bx--text-area"
            rows="4" placeholder="Placeholder text." v-model="project.description"></textarea>
        </div>
      </div>
    </div>
  </div>
  <div class="bx--col-md-3">
    <div class="bx--row">
      <div class="bx--col-sm-2">
        <div class="bx--form-item">
          <strong class="bx--file--label">Изображение </strong>
          <p class="bx--label-description">.png файл.</p>
          <div class="bx--file" data-file>
            <label for="file-importer-image" class="bx--file-btn bx--btn bx--btn--primary" role="button" tabindex="0">Загрузить</label>
            <input type="file" class="bx--file-input" accept="image/png" v-on:change="uploadFile('imageUploader')" ref="imageUploader" id="file-importer-image" data-file-uploader data-target="[data-file-container]"/>
            <div data-file-container class="bx--file-container">
            </div>
          </div>
        </div>
      </div>
      <div class="bx--col-sm-2">
        <div class="bx--form-item">
          <strong class="bx--file--label">Принципиальная электрическая схема</strong>
          <p class="bx--label-description">.pdf файл.</p>
          <div class="bx--file" data-file>
            <label for="file-importer-circuit" class="bx--file-btn bx--btn bx--btn--primary" role="button" tabindex="0">Загрузить</label>
            <input type="file" class="bx--file-input" accept="application/pdf" v-on:change="uploadFile('circuitUploader')" ref="circuitUploader" id="file-importer-circuit" data-file-uploader data-target="[data-file-container]" multiple/>
            <div data-file-container class="bx--file-container">
            </div>
          </div>
        </div>
      </div>
      <div class="bx--col-sm-2">
        <div class="bx--form-item">
          <strong class="bx--file--label">Cборочный чертеж</strong>
          <p class="bx--label-description">.pdf файл.</p>
          <div class="bx--file" data-file>
            <label for="file-importer-assembly" class="bx--file-btn bx--btn bx--btn--primary" role="button" tabindex="0">Загрузить</label>
            <input type="file" class="bx--file-input" accept="application/pdf" v-on:change="uploadFile('assemblyUploader')" ref="assemblyUploader" id="file-importer-assembly" data-file-uploader data-target="[data-file-container]" multiple/>
            <div data-file-container class="bx--file-container">
            </div>
          </div>
        </div>
      </div>
      <div class="bx--col-sm-2">
        <div class="bx--form-item">
          <strong class="bx--file--label">3D модель</strong>
          <p class="bx--label-description">.stl файл.</p>
          <div class="bx--file" data-file>
            <label for="file-importer-treed-d" class="bx--file-btn bx--btn bx--btn--primary" role="button" tabindex="0">Загрузить</label>
            <input type="file" class="bx--file-input" accept="model/stl" v-on:change="uploadFile('treeDUploader')" ref="treeDUploader" id="file-importer-treed-d" data-file-uploader data-target="[data-file-container]" multiple/>
            <div data-file-container class="bx--file-container">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="bx--row bx--row-padding">
  <section class="bx--table-toolbar bx--table-toolbar--sm">
    <div class="bx--toolbar-content">
      <button class="bx--btn bx--btn--sm bx--btn--primary" v-on:click="() => showEditEntityInProjectModal(null)">
        Добавить компонент
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true">
          <path d="M17 15L17 7 15 7 15 15 7 15 7 17 15 17 15 25 17 25 17 17 25 17 25 15 17 15z"></path>
        </svg>
      </button>
    </div>
  </section>
  <table class="bx--data-table  bx--data-table--compact">
    <thead>
    <tr>
      <th >
        <span class="bx--table-header-label">№</span>
      </th>
      <th >
        <span class="bx--table-header-label">Категория</span>
      </th>
      <th >
        <span class="bx--table-header-label">Обозначение</span>
      </th>
      <th >
        <span class="bx--table-header-label">Item</span>
      </th>
      <th >
        <span class="bx--table-header-label">Part Number</span>
      </th>
      <th >
        <span class="bx--table-header-label">Поставщик</span>
      </th>
      <th >
        <span class="bx--table-header-label">Корпус</span>
      </th>
      <th >
        <span class="bx--table-header-label">Производитель</span>
      </th>
      <th >
        <span class="bx--table-header-label">К-во</span>
      </th>
      <th >
        <span class="bx--table-header-label hidden-print">Описание</span>
      </th>
      <th></th>
    </tr>
    </thead>
    <tbody>
    <tr v-for="usedItem in project.usedItems">
      <td>{{project.usedItems.indexOf(usedItem) + 1}}</td>
      <template v-if="usedItem.item == null">
        <td></td>
        <td>{{usedItem.designator}}</td>
        <td colspan="5">Item not found</td>
        <td >{{usedItem.quantity}}</td>
        <td >
        </td>
      </template>
      <template v-else>
        <td>{{usedItem.item.category}}</td>
        <td>{{usedItem.designator}}</td>
        <td>{{usedItem.item.name}}</td>
        <td >
          <a :href="'/Entities/Details/' + usedItem.item.id" target="_blank">{{usedItem.item.partNumber}}</a>
        </td>
        <td >{{usedItem.item.supplier}}</td>
        <td >{{usedItem.item.case}}</td>
        <td >{{usedItem.item.manufacture}}</td>
        <td >{{usedItem.quantity}}</td>
        <td>
          <span style="white-space: pre-line">{{usedItem.item.description}}</span>
        </td>
      </template>
      <td class="bx--table-column-menu">
        <div data-overflow-menu role="menu" tabindex="0" aria-label="Overflow menu description" class="bx--overflow-menu">
          <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--overflow-menu__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
            <circle cx="8" cy="3" r="1"></circle><circle cx="8" cy="8" r="1"></circle><circle cx="8" cy="13" r="1"></circle>
          </svg>
          <ul class="bx--overflow-menu-options bx--overflow-menu--flip">
            <li class="bx--overflow-menu-options__option bx--table-row--menu-option">
              <button class="bx--overflow-menu-options__btn" v-on:click="() => showEditEntityInProjectModal(usedItem)">
                <div class="bx--overflow-menu-options__option-content">
                  <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
                    <path d="M1 13H15V14H1zM12.7 4.5c.4-.4.4-1 0-1.4 0 0 0 0 0 0l-1.8-1.8c-.4-.4-1-.4-1.4 0 0 0 0 0 0 0L2 8.8V12h3.2L12.7 4.5zM10.2 2L12 3.8l-1.5 1.5L8.7 3.5 10.2 2zM3 11V9.2l5-5L9.8 6l-5 5H3z"></path>
                  </svg> Изменить
                </div>
              </button>
            </li>
            <li class="bx--overflow-menu-options__option bx--table-row--menu-option">
              <button class="bx--overflow-menu-options__btn" v-on:click="() => deleteFromProject(usedItem)">
                <div class="bx--overflow-menu-options__option-content">
                  <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
                    <path d="M6 6H7V12H6zM9 6H10V12H9z"></path><path d="M2 3v1h1v10c0 .6.4 1 1 1h8c.6 0 1-.4 1-1V4h1V3H2zM4 14V4h8v10H4zM6 1H10V2H6z"></path>
                  </svg> Удалить
                </div>
              </button>
            </li>
          </ul>
        </div>
      </td>
    </tr>
    </tbody>
  </table>
</div>
</div>
<div id="add-entity-modal" class="bx--modal" role="dialog" aria-modal="true" tabindex="-1">
  <div class="bx--modal-container">
    <div class="bx--modal-header">
      <p class="bx--modal-header__heading bx--type-beta" id="modal-heading">Добавление компонента в печатную плату</p>
      <button class="bx--modal-close" type="button" data-modal-close aria-label="close modal">
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--modal-close__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
          <path d="M12 4.7L11.3 4 8 7.3 4.7 4 4 4.7 7.3 8 4 11.3 4.7 12 8 8.7 11.3 12 12 11.3 8.7 8z"></path>
        </svg>
      </button>
    </div>
    <div class="bx--modal-content bx--modal-content--with-form">
      <div class="bx--grid">
        <div class="bx--row bx--row-padding">
          <div class="bx--col-sm-4">
            <div data-search role="search" class="bx--search bx--search--xl">
              <label id="search-input-label-1" class="bx--label" for="search__input-1">Search</label>
              <input class="bx--search-input bx--search--light" type="text" id="search__input-1" placeholder="Search" v-model="searchString" v-on:input="search">
              <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--search-magnifier" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
                <path d="M15,14.3L10.7,10c1.9-2.3,1.6-5.8-0.7-7.7S4.2,0.7,2.3,3S0.7,8.8,3,10.7c2,1.7,5,1.7,7,0l4.3,4.3L15,14.3z M2,6.5 C2,4,4,2,6.5,2S11,4,11,6.5S9,11,6.5,11S2,9,2,6.5z"></path>
              </svg>
              <button class="bx--search-close bx--search-close--hidden" title="Clear search input" aria-label="Clear search input">
                <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--search-clear" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true">
                  <path d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"></path>
                </svg>
              </button>
            </div>
            <div class="autocomplete-box bx--grid bx--grid--full-width">
              <template v-for="item in searchingData">
                <div class="bx--row" v-on:click="() => selectEntity(item)">
                  <div class="bx--col-md-1">
                    <img :src="item.imagePath" alt="" class="altiumdb--entity-table--image"/>
                  </div>
                  <div class="bx--col-md-4">
                    <div class="bx--grid">
                      <div class="bx--row">{{item.name}}</div>
                      <div class="bx--row" style="height: 4px"></div>
                      <div class="bx--row">{{item.partNumber}}</div>
                      <div class="bx--row" style="height: 4px"></div>
                      <div class="bx--row">{{item.category}}</div>
                    </div>
                  </div>
                  <div class="bx--col-md-3">
                    {{item.description}}
                  </div>
                </div>
              </template>
            </div>
            <div v-if="selectedUsedItem.item != null">
              <div class="bx--row">
                <div class="bx--col-md-8">
                  Selected entity:
                </div>
              </div>
              <div class="bx--row">
                <div class="bx--col-md-1">
                  <img :src="selectedUsedItem.item.imagePath" alt="" class="altiumdb--entity-table--image"/>
                </div>
                <div class="bx--col-md-4">
                  <div class="bx--grid">
                    <div class="bx--row">
                      <a :href="'/entities/details/'+ selectedUsedItem.item.id" target="_blank">{{selectedUsedItem.item.name}}</a>
                    </div>
                    <div class="bx--row" style="height: 4px"></div>
                    <div class="bx--row">{{selectedUsedItem.item.partNumber}}</div>
                    <div class="bx--row" style="height: 4px"></div>
                    <div class="bx--row">{{selectedUsedItem.item.category}}</div>
                  </div>
                </div>
                <div class="bx--col-md-3">
                  {{selectedUsedItem.item.description}}
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="bx--row bx--row-padding">
          <div class="bx--col-md-8">
            <div class="bx--form-item">
              <div data-numberinput class=" bx--number bx--number--light">
                <label for="input-quantity-entity-in-project" class="bx--label">Количество</label>
                <div class="bx--number__input-wrapper">
                  <input id="input-quantity-entity-in-project" type="number" min="0" max="999999" v-model="selectedUsedItem.quantity">
                  <div class="bx--number__controls">
                    <button aria-label="increase number input" class="bx--number__control-btn up-icon" type="button" aria-live="polite" aria-atomic="true">
                      <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" width="8" height="4" viewBox="0 0 8 4" aria-hidden="true">
                        <path d="M0 4L4 0 8 4z"></path>
                      </svg>
                    </button>
                    <button aria-label="decrease number input" class="bx--number__control-btn down-icon" type="button" aria-live="polite" aria-atomic="true">
                      <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" width="8" height="4" viewBox="0 0 8 4" aria-hidden="true">
                        <path d="M8 0L4 4 0 0z"></path>
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="bx--col-md-8">
            <label for="text-area-entityInProject-designator" class="bx--label">Обозначение</label>
            <textarea id="text-area-entityInProject-designator" class="bx--text-area"
                    style="height: 100px;" placeholder="Обозначение" v-model="selectedUsedItem.designator"></textarea>
          </div>
        </div>
      </div>
    </div>
    <div class="bx--modal-footer">
      <button class="bx--btn bx--btn--secondary" type="button" v-on:click="resetselectedUsedItem" data-modal-close>Close</button>
      <button class="bx--btn bx--btn--primary" type="button" v-on:click="saveEntityInProject">Ok</button>
    </div>
  </div>
  <!-- Note: focusable span allows for focus wrap feature within Modals -->
  <span tabindex="0"></span>
</div>
</div>

@section Scripts
{
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
  <script src="https://unpkg.com/vuex"></script>
  <script>
    let Modal = CarbonComponents.Modal;
  
    let app = new Vue({
      el: '#editProject',
      data: {
        isEdit: @(isEdit ? "true" : "false"),
        project : {
          id: @Model.Id,
          name: "",
          variant: "",
          usedItems: [],
          quantity: 0,
          description: "",
        },
        selectedUsedItem: {
          designator:"",
          item: null,
          itemId: null,
          id: 0,
          inItemId: @Model.Id,
          inItemType: 1,
          quantity:0
        },
        searchString: "",
        searchingData: [],
        selectedEntity: null,
        editEntityModal: null,
      },
      computed : {
        validator: function() {
          let vm = this;
           return {
             projectName: {
               isValid: vm.project.name != null && vm.project.name.length > 0,
               validationMessage : "Заполните обязательное поле",
             }
           }
        }
      },
      methods: {
        loadData : function ()
        {
          let vm = this;
          if (vm.isEdit)
          {
            request(`/api/pcb/${vm.project.id}`, 'GET')
              .then(r => {
                r.json().then(json => vm.project = json);
              })
              .catch(e => console.log(e));
          }
        },
        showEditEntityInProjectModal: function (entityInProject)
        { 
          Object.assign(this.selectedUsedItem, entityInProject)
          if (entityInProject != null)
            this.selectedUsedItem.isEdit = true;
          this.editEntityModal.show();
        },
        search : function ()
        {
          let vm = this;
          request(`/api/search/pcbItem?q=${vm.searchString}&take=3`, 'GET')
            .then(r => {
              r.json().then(json => vm.searchingData = json)
              .catch(e => vm.searchingData = []);
            })
            .catch(e => console.log(e));
        },
        selectEntity: function (item)
        {
          this.selectedUsedItem.item = item;
          this.selectedUsedItem.itemId = item.id;
          this.selectedUsedItem.itemtype = item.itemType;
          this.searchingData = [];
        },
        saveEntityInProject : function ()
        {
          let vm = this;
          if (this.selectedUsedItem.item == null ) return;
          if (vm.selectedUsedItem.id === 0 && !vm.selectedUsedItem.isEdit)
          {
            vm.project.usedItems.push(vm.selectedUsedItem);
          }
          else 
          {
            let index = vm.project.usedItems.findIndex(x => x.id === vm.selectedUsedItem.id);
            vm.project.usedItems[index] = vm.selectedUsedItem;
          }
          
          vm.resetselectedUsedItem();
          vm.editEntityModal.hide();
          vm.sortusedItems();
        },
        sortusedItems: function ()
        {
          let cmp = (a, b) => {
            if ( a.designator < b.designator ){
              return -1;
            }
            if ( a.designator > b.designator ){
              return 1;
            }
            return 0;  
          }
          
          this.project.usedItems.sort(cmp);
        },
        updateProject : function ()
        {
          let vm = this;
          if (vm.isEdit)
          {
             sendObjectAsFormData(`/api/pcb/${vm.project.id}`, 'PUT', vm.project, 2)
                .then(project => location.href = `/pcb/details/${project.id}`)
                .catch(e => console.log(e));  
          }
          else
          {
            sendObjectAsFormData(`/api/pcb`, 'POST',vm.project, 2)
               .then(project => location.href = `/pcb/details/${project.id}`)
               .catch(e => console.log(e));  
          }
        },
        resetselectedUsedItem: function ()
        {
          this.selectedUsedItem = {
            designator:"",
            item: null,
            itemId: null,
            id: 0,
            inItemId: @Model.Id,
            inItemType: 1,
            quantity:0
          };
        },
        deleteFromProject: function(entityInProject)
        {
          this.project.usedItems = this.project.usedItems.filter(x => x.id !== entityInProject.id);
        },
        uploadFile: function (key) {
          this.project[key] = this.$refs[key].files[0];
        },
      },
      mounted() {
        let vm = this;
        vm.editEntityModal = Modal.create(document.getElementById('add-entity-modal'));
        vm.loadData();
        document.addEventListener('modal-hidden', function(evt) {
          vm.searchString = "";
        });
      },
      updated() {
        CarbonComponents.OverflowMenu.init();
      }
    });
    
  </script>
}