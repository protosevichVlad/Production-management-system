@using MySqlConnector
@model ProductionManagementSystem.Core.Models.AltiumDB.DatabaseTable

@{
  ViewBag.Title = "Create table";
  Layout = "Shared/_AltiumDBLayout";
}
<form method="post">
  <div class="bx--grid">
    <div class="bx--row">
      <div class="bx--col-lg-8">
        <div class="bx--form-item">
          <label for="text-input-3" class="bx--label">@Html.LabelFor(x => x.TableName)</label>
          @if (Model.TableColumns.Count > 1)
          {
            <input id="text-input-3" type="text" class="bx--text-input bx--text-input--light" asp-for="TableName" readonly>
          }
          else
          {
            <input id="text-input-3" type="text" class="bx--text-input bx--text-input--light" asp-for="TableName">
          }
        </div>
        <div class="bx--form-item">
          <label for="text-input-3" class="bx--label">@Html.LabelFor(x => x.DisplayName)</label>
          <input id="text-input-3" type="text" class="bx--text-input bx--text-input--light" asp-for="DisplayName">
        </div>
      </div>
      <div class="bx--col-lg-4">
        <ul class="bx--list--unordered">
          <li class="bx--list__item"><span class="caret">Beverages</span>
            <ul class="nested bx--list--unordered bx--list--nested">
              <li class="bx--list__item">Water</li>
              <li class="bx--list__item">Coffee</li>
              <li class="bx--list__item"><span class="caret">Tea</span>
                <ul class="nested bx--list--unordered bx--list--nested">
                  <li class="bx--list__item">Black Tea</li>
                  <li class="bx--list__item">White Tea</li>
                  <li class="bx--list__item"><span class="caret">Green Tea</span>
                    <ul class="nested bx--list--unordered bx--list--nested">
                      <li class="bx--list__item">Sencha</li>
                      <li class="bx--list__item">Gyokuro</li>
                      <li class="bx--list__item">Matcha</li>
                      <li class="bx--list__item">Pi Lo Chun</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
    <div class="bx--row">
      <div class="bx--col-lg-12">
        <div class="bx--data-table-container " data-table>
          <section class="bx--table-toolbar  bx--table-toolbar ">
            <div class="bx--toolbar-content">
              <button class="bx--btn bx--btn bx--btn--primary" type="button" id="buttonCreateTableColumn" onclick="createTableColumn()">
                Add column
                <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true">
                  <path d="M17 15L17 7 15 7 15 15 7 15 7 17 15 17 15 25 17 25 17 17 25 17 25 15 17 15z"></path>
                </svg>
              </button>
            </div>
          </section>
          <!-- End Toolbar Content -->
        </div>

        <table class="bx--data-table">
          <thead>
          <tr>
            <th style="width: 30px"></th>
            <th >
              <span class="bx--table-header-label">Column name</span>
            </th>
            <th >
              <span class="bx--table-header-label">Display in table</span>
            </th>
            <th style="width: 30px"></th>
          </tr>
          </thead>
          <tbody>
          @for (int i = 1; i < Model.TableColumns.Count; i++)
          {
            Model.TableColumns[i].Id = i;
            <partial name="Shared/Table/TableColumn" model="Model.TableColumns[i]"/>
          }
          <tr id="Tr0">
            @Html.HiddenFor(x => x.TableColumns[0].ColumnName)
            @Html.HiddenFor(x => x.TableColumns[0].DatabaseOrder)
            @Html.HiddenFor(x => x.TableColumns[0].Display)
          </tr>
          </tbody>
        </table>
      </div>
      <div class="bx--form-item">
        <button class="bx--btn bx--btn--primary" type="submit">Submit</button>
      </div>
    </div>
  </div>
</form>
<script>
var toggler = document.getElementsByClassName("caret");
var i;

for (i = 0; i < toggler.length; i++) {
  toggler[i].addEventListener("click", function() {
    this.parentElement.querySelector(".nested").classList.toggle("active");
    this.classList.toggle("caret-down");
  });
}
</script>