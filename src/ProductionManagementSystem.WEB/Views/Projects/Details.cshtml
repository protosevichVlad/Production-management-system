@model ProductionManagementSystem.Core.Models.AltiumDB.Projects.Project

@{
  ViewBag.Title = Model.Name + " " + Model.Variant;
  Layout = "_AltiumDBLayout";
}

<div class="bx--grid">
  <div class="bx--row bx--row-padding">
    <div class="bx--col-sm-3">
      <h1>
        @Model.Name
      </h1>
    </div>
    <div class="bx--col-sm-1" style="display: flex; justify-content: end;">
      <div data-overflow-menu class="bx--overflow-menu">
        <button
          class="bx--overflow-menu__trigger bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--align-start"
          aria-haspopup="true" aria-expanded="false" id="example-zyub0566err-trigger" aria-controls="example-zyub0566err">
          <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--toolbar-action__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
            <path d="M13.5,8.4c0-0.1,0-0.3,0-0.4c0-0.1,0-0.3,0-0.4l1-0.8c0.4-0.3,0.4-0.9,0.2-1.3l-1.2-2C13.3,3.2,13,3,12.6,3	c-0.1,0-0.2,0-0.3,0.1l-1.2,0.4c-0.2-0.1-0.4-0.3-0.7-0.4l-0.3-1.3C10.1,1.3,9.7,1,9.2,1H6.8c-0.5,0-0.9,0.3-1,0.8L5.6,3.1	C5.3,3.2,5.1,3.3,4.9,3.4L3.7,3C3.6,3,3.5,3,3.4,3C3,3,2.7,3.2,2.5,3.5l-1.2,2C1.1,5.9,1.2,6.4,1.6,6.8l0.9,0.9c0,0.1,0,0.3,0,0.4	c0,0.1,0,0.3,0,0.4L1.6,9.2c-0.4,0.3-0.5,0.9-0.2,1.3l1.2,2C2.7,12.8,3,13,3.4,13c0.1,0,0.2,0,0.3-0.1l1.2-0.4	c0.2,0.1,0.4,0.3,0.7,0.4l0.3,1.3c0.1,0.5,0.5,0.8,1,0.8h2.4c0.5,0,0.9-0.3,1-0.8l0.3-1.3c0.2-0.1,0.4-0.2,0.7-0.4l1.2,0.4	c0.1,0,0.2,0.1,0.3,0.1c0.4,0,0.7-0.2,0.9-0.5l1.1-2c0.2-0.4,0.2-0.9-0.2-1.3L13.5,8.4z M12.6,12l-1.7-0.6c-0.4,0.3-0.9,0.6-1.4,0.8	L9.2,14H6.8l-0.4-1.8c-0.5-0.2-0.9-0.5-1.4-0.8L3.4,12l-1.2-2l1.4-1.2c-0.1-0.5-0.1-1.1,0-1.6L2.2,6l1.2-2l1.7,0.6	C5.5,4.2,6,4,6.5,3.8L6.8,2h2.4l0.4,1.8c0.5,0.2,0.9,0.5,1.4,0.8L12.6,4l1.2,2l-1.4,1.2c0.1,0.5,0.1,1.1,0,1.6l1.4,1.2L12.6,12z"></path><path d="M8,11c-1.7,0-3-1.3-3-3s1.3-3,3-3s3,1.3,3,3C11,9.6,9.7,11,8,11C8,11,8,11,8,11z M8,6C6.9,6,6,6.8,6,7.9C6,7.9,6,8,6,8	c0,1.1,0.8,2,1.9,2c0,0,0.1,0,0.1,0c1.1,0,2-0.8,2-1.9c0,0,0-0.1,0-0.1C10,6.9,9.2,6,8,6C8.1,6,8,6,8,6z"></path>
          </svg>
        </button>
        <div class="bx--overflow-menu-options bx--overflow-menu--flip" tabindex="-1"
             data-floating-menu-direction="bottom" role="menu" aria-labelledby="example-zyub0566err-trigger"
             id="example-zyub0566err">
          <ul class="bx--overflow-menu-options__content">
            <li class="bx--overflow-menu-options__option">
              <button class="bx--overflow-menu-options__btn" role="menuitem" onclick="showQuantityModal('projects', 'add', @Model.Id)">
                <span class="bx--overflow-menu-options__option-content">
                  Add
                </span>
              </button>
            </li>
            <li class="bx--overflow-menu-options__option">
              <button class="bx--overflow-menu-options__btn" role="menuitem" onclick="showQuantityModal('projects', 'get', @Model.Id)">
                <span class="bx--overflow-menu-options__option-content">
                  Get
                </span>
              </button>
            </li>
            <li class="bx--overflow-menu-options__option  ">
              <button class="bx--overflow-menu-options__btn" role="menuitem" onclick="location.href='/Projects/Edit/@Model.Id'">
                <span class="bx--overflow-menu-options__option-content">
                  Edit
                </span>
              </button>
            </li>
            <li class="bx--overflow-menu-options__option  ">
              <button class="bx--overflow-menu-options__btn" role="menuitem" data-modal-target="#modal-danger" onclick="showDeleteModal('Deleting a project', 'Do you really want to delete this project', () => deleteProject(@Model.Id, () => location.href='/Projects'))">
                <span class="bx--overflow-menu-options__option-content">
                  Delete
                </span>
              </button>
            </li>
          </ul>
          <span tabindex="0"></span>
        </div>
      </div>
    </div>
  </div>
  <div class="bx--row bx--row-padding">
    <div class="bx--col-md-2">
      <img src="@Model.ImagePath" class="altiumdb--entity--image" alt=""/>
    </div>
    <div class="bx--col-md-2">
      <div id="model" style="max-width: 400px; max-height: 400px; width: 100%; height: 100%;"></div>
    </div>
    <div class="bx--col-md-4 hidden-print">
      <div class="bx--grid">
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Print version</strong>
          </div>
          <div class="bx--col-lg-7">
            <a asp-controller="Projects" asp-action="PrintVersion" asp-route-id="@Model.Id" target="_blank">Print version</a>
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Bill of matirial</strong>
          </div>
          <div class="bx--col-lg-7">
            <a href="@Model.BOMFilePath" target="_blank">@Model.Name bom file</a>
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Assembly drawing</strong>
          </div>
          <div class="bx--col-lg-7">
            <a href="@Model.AssemblyDrawingPath" target="_blank">@Model.Name assembly drawing</a>
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Circuit diagram</strong>
          </div>
          <div class="bx--col-lg-7">
            <a href="@Model.CircuitDiagramPath" target="_blank">@Model.Name circuit diagram</a>
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Quantity</strong>
          </div>
          <div class="bx--col-lg-7">
            <span style="white-space: pre-line" id="quantity-value">@Model.Quantity</span>
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
        <div class="bx--row">
          <div class="bx--col-lg-5">
            <strong>Description</strong>
          </div>
          <div class="bx--col-lg-7">
            @Model.Description
          </div>
        </div>
        <div class="bx--row" style="height: 10px"></div>
      </div>
    </div>
  </div>
  <div class="bx--row bx--row-padding">
    <partial name="Partail/Projects/ProjectComponents" model="@Model"/>
  </div>
</div>

@section Scripts
{
  <script src="/js/three.min.js"></script>
  <script src="/js/STLLoader.js"></script>
  <script src="/js/OrbitControls.js"></script>
  <script>
  
  function STLViewer(model, elementID) {
      var elem = document.getElementById(elementID);
      
      var camera = new THREE.PerspectiveCamera(70, 
          elem.clientWidth/elem.clientHeight, 1, 1000);
      
      var renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
      renderer.setSize(elem.clientWidth, elem.clientHeight);
      elem.appendChild(renderer.domElement);
      window.addEventListener('resize', function () {
          renderer.setSize(elem.clientWidth, elem.clientHeight);
          camera.aspect = elem.clientWidth/elem.clientHeight;
          camera.updateProjectionMatrix();
      }, false);
      
      var controls = new THREE.OrbitControls(camera, renderer.domElement);
      controls.enableDamping = true;
      controls.rotateSpeed = 0.4;
      controls.dampingFactor = 0.4;
      controls.enableZoom = true;
      controls.autoRotate = true;
      controls.autoRotateSpeed = .75;
      
      var scene = new THREE.Scene();
      const light = new THREE.PointLight( 0xffffff, 0.75, 100 );
      light.position.set( 25, 25, 25 );
      scene.add(light);
      const light1 = new THREE.PointLight( 0xffffff, 0.25, 100 );
            light1.position.set( 25, 25, -25 );
            scene.add(light1);
      scene.add(new THREE.AmbientLight(0xffffff, 1.5));
      (new THREE.STLLoader()).load(model, function (geometry) {
          var material = new THREE.MeshPhongMaterial({ 
              color: 0x6c6c6c, 
              specular: 100, 
              shininess: 100 });
          var mesh = new THREE.Mesh(geometry, material);
              scene.add(mesh);
              
      var middle = new THREE.Vector3();
      geometry.computeBoundingBox();
      geometry.boundingBox.getCenter(middle);
      mesh.geometry.applyMatrix(new THREE.Matrix4().makeTranslation( 
                                    -middle.x, -middle.y, -middle.z ) );
      var largestDimension = Math.max(geometry.boundingBox.max.x,
                                  geometry.boundingBox.max.y, 
                                  geometry.boundingBox.max.z)
      camera.position.z = largestDimension * 2;
      
      var animate = function () {
            requestAnimationFrame(animate);
            controls.update();
            renderer.render(scene, camera);
        }; 
      
       animate();
          });
  }
  </script>
  <script type="text/javascript">
      window.onload = function() {
          STLViewer("@Model.ThreeDModelPath", "model")
      }
  </script>
}