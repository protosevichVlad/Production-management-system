@using ProductionManagementSystem.Core.Models.Tasks
@model TaskStatusEnum

@{
  var statuses = Enum.GetValues(typeof(TaskStatusEnum));
  var currentSvg = "<svg><path d='M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0'></path></svg>";
  var completeSvg = "<svg focusable='false' preserveAspectRatio='xMidYMid meet' style='will-change: transform;' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' aria-hidden='true'><path d='M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M8,14c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S11.3,14,8,14z'></path><path d='M7 10.8L4.5 8.3 5.3 7.5 7 9.2 10.7 5.5 11.5 6.3z'></path></svg>";
  var incompleteSvg = "<svg><path d='M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z'></path></svg>";

  bool IsCurrent(object status)
  {
    if (status is TaskStatusEnum s)
    {
      return (Model & s) == s;
    }
    
    return false;
  }
  
  bool IsComplete(object status)
  {
    if (status is TaskStatusEnum s)
    {
      return Model > s && !IsCurrent(status);
    }
    
    return false;
  }
  
  bool IsIncomplete(object status)
  {
    if (status is TaskStatusEnum s)
    {
      return Model < s;
    }
    
    return false;
  }
}

<div style="display: flex; justify-content: center">
<ul data-progress data-progress-current class="bx--progress ">
  @foreach (var status in statuses)
  {
    <li class="bx--progress-step @(IsCurrent(status) || IsComplete(status) ? "bx--progress-step--current": "bx--progress-step--incomplete")">
      @if (IsCurrent(status)) {
        @Html.Raw(currentSvg)
      } else if (IsComplete(status)) {
        @Html.Raw(completeSvg)
      } else if (IsIncomplete(status)) {
        @Html.Raw(incompleteSvg)
      }
      <p class="bx--progress-label" onclick="changeStatus(@((int)status))">@(((TaskStatusEnum)status).GetName())</p>
      <span class="bx--progress-line"></span>
    </li>
  }
</ul>
</div>